function Decoder(bytes, port) {
  var binary = '';
  for (var i = 0;i <bytes.length; i++) {
    var binarySeg = bytes[i].toString(2);
    if (binary.length < 24) {
    var diff = 8 - binarySeg.length;
      for (var d=0;d<diff;d++) {
          binarySeg= '0' + binarySeg;
      }
    }
    binary = binary + binarySeg
  }
  if (binary.length != 24) {
    return {error: true, message:"malformed binary"}
  }

  var rawDistanceSegment = {
    startIndex: 13,
    end: 22,
  }
  var batterySegment = {
    startIndex: 0,
    end: 6,
  }
  var temperatureSegment = {
    startIndex: 6,
    end: 13,
  }
  function extractString(str, s,e){
    return str.substring(s,e)
  }
  
  var rawBinary = extractString(binary, rawDistanceSegment.startIndex, rawDistanceSegment.end)  
  var batteryBinary = extractString(binary, batterySegment.startIndex, batterySegment.end)  
  var temperatureBinary = extractString(binary, temperatureSegment.startIndex, temperatureSegment.end)  

  function bin2dec(num){
    return num.split('').reverse().reduce(function(x, y, i){
      return (y === '1') ? x + Math.pow(2, i) : x;
    }, 0);
  }

  
  var rawDec =bin2dec(rawBinary);
  var batteryDec = bin2dec(batteryBinary);
  var temperatureDec = bin2dec(temperatureBinary);

  function decodeRaw(dec) {
    if (dec >= 0 && dec <=500 ) {
      return dec
    }
    if (dec==511)//error
    {
      return "error"
    }
    return "invalid payload"
  }
  
  function decodeTemperature(dec) {
    if (dec >= 0 && dec <=125 ) {
      return dec-40
    }
    if (dec==127)//error
    {
      return "error"
    }
    return "invalid payload"
  }

  function decodeBattery(dec) {
    if (dec >= 0 && dec <=50 ) {
      return dec*2
    }
    if (dec==63)//error
    {
      return "error"
    }
    return "invalid payload"
  }

  var decoded_raw = decodeRaw(rawDec);
  var decoded_battery = decodeBattery(batteryDec)
  var decoded_temperature = decodeTemperature(temperatureDec)

  return {rawDistance: decoded_raw,battery:decoded_battery,temperature:decoded_temperature};
}
